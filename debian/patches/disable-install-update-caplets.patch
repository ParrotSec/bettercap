Description: Disable install and update caplets
Author: Lorenzo "Palinuro" Faletra <palinuro@parrotsec.org>
Last-Update: 2021-02-01

--- bettercap-2.29.orig/caplets/env.go
+++ bettercap-2.29/caplets/env.go
@@ -19,7 +19,7 @@ func getInstallBase() string {
 	if runtime.GOOS == "windows" {
 		return filepath.Join(os.Getenv("ALLUSERSPROFILE"), "bettercap")
 	}
-	return "/usr/local/share/bettercap/"
+	return "/usr/share/bettercap/"
 }
 
 func getUserHomeDir() string {
--- bettercap-2.29.orig/main.go
+++ bettercap-2.29/main.go
@@ -64,7 +64,7 @@ func main() {
 	// modules might already be started.
 	for _, cmd := range session.ParseCommands(*sess.Options.Commands) {
 	        if strings.Contains(cmd, "update") {
-		         fmt.Printf("%s is disabled in Kali. Please use apt\n", cmd)
+		         fmt.Printf("%s is disabled in Parrot. Please use apt\n", cmd)
 	        }
 		if err = sess.Run(cmd); err != nil {
 			log.Error("error while running '%s': %s", tui.Bold(cmd), tui.Red(err.Error()))
--- bettercap-2.29.orig/modules/caplets/caplets.go
+++ bettercap-2.29/modules/caplets/caplets.go
@@ -2,8 +2,6 @@ package caplets
 
 import (
 	"fmt"
-	"io"
-	"net/http"
 	"os"
 
 	"github.com/bettercap/bettercap/caplets"
@@ -11,9 +9,7 @@ import (
 
 	"github.com/dustin/go-humanize"
 
-	"github.com/evilsocket/islazy/fs"
 	"github.com/evilsocket/islazy/tui"
-	"github.com/evilsocket/islazy/zip"
 )
 
 type CapletsModule struct {
@@ -36,12 +32,11 @@ func NewCapletsModule(s *session.Session
 		func(args []string) error {
 			return mod.Paths()
 		}))
-
 	mod.AddHandler(session.NewModuleHandler("caplets.update", "",
-		"Install/updates the caplets.",
-		func(args []string) error {
-			return mod.Update()
-		}))
+               "Install/updates the caplets.",
+               func(args []string) error {
+                       return mod.Update()
+               }))
 
 	return mod
 }
@@ -51,7 +46,7 @@ func (mod *CapletsModule) Name() string
 }
 
 func (mod *CapletsModule) Description() string {
-	return "A module to list and update caplets."
+	return "A module to list caplets."
 }
 
 func (mod *CapletsModule) Author() string {
@@ -73,7 +68,7 @@ func (mod *CapletsModule) Start() error
 func (mod *CapletsModule) Show() error {
 	caplets := caplets.List()
 	if len(caplets) == 0 {
-		return fmt.Errorf("no installed caplets on this system, use the caplets.update command to download them")
+		return fmt.Errorf("no installed caplets on this system, if you are using Parrot Security, run sudo apt install ettercap-caplets")
 	}
 
 	colNames := []string{
@@ -113,38 +108,6 @@ func (mod *CapletsModule) Paths() error
 }
 
 func (mod *CapletsModule) Update() error {
-	if !fs.Exists(caplets.InstallBase) {
-		mod.Info("creating caplets install path %s ...", caplets.InstallBase)
-		if err := os.MkdirAll(caplets.InstallBase, os.ModePerm); err != nil {
-			return err
-		}
-	}
-
-	out, err := os.Create(caplets.ArchivePath)
-	if err != nil {
-		return err
-	}
-	defer out.Close()
-
-	mod.Info("downloading caplets from %s ...", caplets.InstallArchive)
-
-	resp, err := http.Get(caplets.InstallArchive)
-	if err != nil {
-		return err
-	}
-	defer resp.Body.Close()
-
-	if _, err := io.Copy(out, resp.Body); err != nil {
-		return err
-	}
-
-	mod.Info("installing caplets to %s ...", caplets.InstallPath)
-
-	if _, err = zip.Unzip(caplets.ArchivePath, caplets.InstallBase); err != nil {
-		return err
-	}
-
-	os.RemoveAll(caplets.InstallPath)
-
-	return os.Rename(caplets.InstallPathArchive, caplets.InstallPath)
+	mod.Info("this command is inactive in Parrot Security. Run sudo apt install bettercap-caplets to get the caplets")
+	return nil
 }
--- bettercap-2.29.orig/modules/ui/ui.go
+++ bettercap-2.29/modules/ui/ui.go
@@ -52,7 +52,7 @@ func NewUIModule(s *session.Session) *UI
 		}))
 
 	mod.AddHandler(session.NewModuleHandler("ui.update", "",
-		"Disable in Kali. Install the package bettecap-ui",
+		"Disable in Parrot. Install the package bettecap-ui",
 		func(args []string) error {
 			return mod.Start()
 		}))
@@ -66,7 +66,7 @@ func (mod *UIModule) Name() string {
 }
 
 func (mod *UIModule) Description() string {
-    return "A module to manage bettercap's UI. Disabled in Kali: use apt install bettercap-ui to install and/or update ui."
+    return "A module to manage bettercap's UI. Disabled in Parrot: use apt install bettercap-ui to install and/or update ui."
 }
 
 func (mod *UIModule) Author() string {
